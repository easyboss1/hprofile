name: Hprofile Actions
on: workflow_dispatch
env:
  AWS_REGION: us-east-2
jobs:
  Testing:
    runs-on: ubuntu-latest
    steps:
      - name: Code checkout
        uses: actions/checkout@v4

      - name: Maven test
        run: mvn test

      - name: Checkstyle
        run: mvn checkstyle:checkstyle

      ## Setup Java 11
      - name: Set Java 11
        uses: actions/setup-java@v3
        with:
         distribution: 'temurin'
         java-version: '11'

      ## Setup sonar-scanner
      - name: Setup SonarQube
        uses: warchant/setup-sonar-scanner@v7

      ## Run sonar-scanner
      - name: SonarQube Scan
        run: |
          sonar-scanner \
           -Dsonar.host.url=${{ secrets.SONAR_URL }} \
           -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
           -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }} \
           -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }} \
           -Dsonar.sources=src/ \
           -Dsonar.junit.reportsPath=target/surefire-reports/ \
           -Dsonar.jacoco.reportsPath=target/jacoco.exec \
           -Dsonar.java.checkstyle.reportPaths=target/checkstyle-result.xml \
           -Dsonar.java.binaries=target/test-classes/com/visualpathit/account/controllerTest/

      ## Check Quality Gate status
      - name: SonarQube Quality Gate check
        id: sonarqube-quality-gate-check
        uses: sonarsource/sonarqube-quality-gate-action@master
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_URL }}

  BUILD_AND_PUBLISH:
    needs: Testing
    runs-on: ubuntu-latest
    steps:
      - name: Code checkout
        uses: actions/checkout@v4

      - name: Update application.properties file
        run: |
          sed -i "s/^jdbc.username.*$/jdbc.username=${{ secrets.RDS_USER }}/" src/main/resources/application.properties
          sed -i "s/^jdbc.password.*$/jdbc.password=${{ secrets.RDS_PASS }}/" src/main/resources/application.properties
          sed -i "s/db01/${{ secrets.RDS_ENDPOINT }}/" src/main/resources/application.properties

      ## ✅ NEW: Configure AWS Credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      ## ✅ NEW: Login to Amazon ECR
      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ env.AWS_REGION }} | \
          docker login --username AWS --password-stdin ${{ secrets.REGISTRY }}

      ## ✅ NEW: Verify Docker Daemon
      - name: Check Docker Daemon
        run: docker info

      ## Build & Push Docker Image
      - name: Build & Upload image to ECR
        run: |
          docker build -t ${{ secrets.REGISTRY }}/actapp:latest .
          docker tag ${{ secrets.REGISTRY }}/actapp:latest ${{ secrets.REGISTRY }}/actapp:${{ github.run_number }}
          docker push ${{ secrets.REGISTRY }}/actapp:latest
          docker push ${{ secrets.REGISTRY }}/actapp:${{ github.run_number }}
